name: Build static Qt

on:
  push:
    tags:
      - '*-*' # Only tags with build number
permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        arch: [x64, x64_arm64]
        exclude:
        - os: macos-latest
          arch: x64_arm64

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4
      - &qt-version
        name: Find Qt version
        shell: python
        run: |
          import re
          import os

          with open("action.yml") as f:
            action_content = f.read()
          match = re.search(r"VERSION_TAG: v([\d.]+)", action_content)
          print("Found Qt version:", match[1])
          with open(os.environ["GITHUB_ENV"], "a") as f:
            f.write("QT_VERSION=" + match[1])

      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Clone Qt repo
        run: |
          git clone https://github.com/qt/qt5.git qt -b '${{env.QT_VERSION}}'
          mkdir qt_build
          cd qt
          perl init-repository.pl -f --module-subset=qtbase,qtsvg,qtshadertools,qtmultimedia,qttools,qttranslations

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: contains(matrix.os, 'windows')
        with:
          arch: ${{ matrix.arch }}

      - name: Build Qt (Windows)
        if: contains(matrix.os, 'windows')
        working-directory: qt_build
        env:
          CL: /MP # Build with multiple processes
        run: |
          ..\qt\configure.bat -list-features
          $configArgs = Get-Content ..\feature-flags.txt | Where-Object { $_.Trim() -ne '' }
          ..\qt\configure.bat @configArgs -- -DCMAKE_CXX_FLAGS="/await:strict"
          cmake --build . --parallel 4

      - name: Build Qt (macOS)
        if: contains(matrix.os, 'macos')
        working-directory: qt_build
        run: |
          ../qt/configure -list-features
          ../qt/configure $(cat ../feature-flags.txt) -- -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          cmake --build . --parallel 3

      - name: Package binaries
        run: |
          cmake --install .
          7z a qt-${{env.QT_VERSION}}-static-${{matrix.os-caption}}.zip qt_static

      - uses: actions/upload-artifact@v4
        with:
          name: qt-static-${{matrix.os-caption}}
          path: qt-*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true
      - uses: softprops/action-gh-release@v2
        with:
          files: release/*
      - *qt-version
      - name: Shorthand tags
        run: |
          git config --global user.email "27856297+dependabot-preview[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -d v$QT_VERSION || true
          git tag v$QT_VERSION -m v$QT_VERSION
          git push -f origin v$QT_VERSION
          git tag -d v${QT_VERSION%.*} || true
          git tag v${QT_VERSION%.*} -m v${QT_VERSION%.*}
          git push -f origin v${QT_VERSION%.*}
